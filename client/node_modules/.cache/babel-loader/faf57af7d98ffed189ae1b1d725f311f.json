{"ast":null,"code":"import Chatkit from \"@pusher/chatkit-client\";\nimport axios from \"axios\";\n\nfunction handleInput(event) {\n  const _event$target = event.target,\n        value = _event$target.value,\n        name = _event$target.name;\n  this.setState({\n    [name]: value\n  });\n}\n\nfunction connectToChatkit() {\n  const userId = this.state.userId;\n  const tokenProvider = new TokenProvider({\n    url: \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/0c668823-ec59-4ebd-a1cf-a5932d8d7070/token\"\n  });\n  const chatManager = new ChatManager({\n    instanceLocator: \"v1:us1:0c668823-ec59-4ebd-a1cf-a5932d8d7070\",\n    userId,\n    tokenProvider\n  });\n  return chatManager.connect().then(currentUser => {\n    this.setState({\n      currentUser,\n      rooms: currentUser.rooms\n    }, () => connectToRoom.call(this));\n  }).catch(console.error);\n}\n\nfunction connectToRoom() {\n  const currentUser = this.state.currentUser;\n  const roomId = \"21207962\";\n  this.setState({\n    messages: []\n  });\n  return currentUser.subscribeToRoomMultipart({\n    roomId,\n    messageLimit: 100,\n    hooks: {\n      onMessage: message => {\n        const m = this.state.messages;\n        this.setState({\n          messages: [...m, message]\n        });\n      },\n      onPresenceChanged: () => {\n        const currentRoom = this.state.currentRoom;\n        this.setState({\n          roomUsers: currentRoom.users.sort(a => {\n            if (a.presence.state === \"online\") return -1;\n            return 1;\n          })\n        });\n      }\n    }\n  }).then(currentRoom => {\n    this.setState({\n      currentRoom,\n      rooms: currentUser.rooms\n    });\n  }).catch(console.error);\n}\n\nfunction sendMessage() {\n  const _this$state = this.state,\n        newMessage = _this$state.newMessage,\n        currentUser = _this$state.currentUser,\n        currentRoom = _this$state.currentRoom,\n        pictures = _this$state.pictures;\n  const parts = [];\n  if (newMessage.trim() === \"\" && pictures.length === 0) return;\n\n  if (newMessage.trim() !== \"\") {\n    parts.push({\n      type: \"text/plain\",\n      content: newMessage\n    });\n  }\n\n  pictures.forEach(pic => {\n    parts.push({\n      file: pic\n    });\n  });\n  currentUser.sendMultipartMessage({\n    roomId: \"\".concat(currentRoom.id),\n    parts\n  });\n  this.setState({\n    newMessage: \"\",\n    pictures: [],\n    showImagePicker: false\n  });\n}","map":{"version":3,"sources":["/home/ayo/Dev/pusher/react-unread/src/methods.js"],"names":["Chatkit","axios","handleInput","event","target","value","name","setState","connectToChatkit","userId","state","tokenProvider","TokenProvider","url","chatManager","ChatManager","instanceLocator","connect","then","currentUser","rooms","connectToRoom","call","catch","console","error","roomId","messages","subscribeToRoomMultipart","messageLimit","hooks","onMessage","message","m","onPresenceChanged","currentRoom","roomUsers","users","sort","a","presence","sendMessage","newMessage","pictures","parts","trim","length","push","type","content","forEach","pic","file","sendMultipartMessage","id","showImagePicker"],"mappings":"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","sourcesContent":["import Chatkit from \"@pusher/chatkit-client\";\nimport axios from \"axios\";\n\nfunction handleInput(event) {\n  const { value, name } = event.target;\n\n  this.setState({\n    [name]: value\n  });\n}\n\nfunction connectToChatkit() {\n  const { userId } = this.state;\n\n  const tokenProvider = new TokenProvider({\n    url:\n      \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/0c668823-ec59-4ebd-a1cf-a5932d8d7070/token\"\n  });\n\n  const chatManager = new ChatManager({\n    instanceLocator: \"v1:us1:0c668823-ec59-4ebd-a1cf-a5932d8d7070\",\n    userId,\n    tokenProvider\n  });\n\n  return chatManager\n    .connect()\n    .then(currentUser => {\n      this.setState(\n        {\n          currentUser,\n          rooms: currentUser.rooms\n        },\n        () => connectToRoom.call(this)\n      );\n    })\n    .catch(console.error);\n}\n\nfunction connectToRoom() {\n  const { currentUser } = this.state;\n  const roomId = \"21207962\"\n  this.setState({\n    messages: []\n  });\n\n  return currentUser\n    .subscribeToRoomMultipart({\n      roomId,\n      messageLimit: 100,\n      hooks: {\n        onMessage: message => {\n          const m = this.state.messages;\n          this.setState({\n            messages: [...m, message],\n          });\n        },\n        onPresenceChanged: () => {\n          const { currentRoom } = this.state;\n          this.setState({\n            roomUsers: currentRoom.users.sort(a => {\n              if (a.presence.state === \"online\") return -1;\n\n              return 1;\n            })\n          });\n        }\n      }\n    })\n    .then(currentRoom => {\n      this.setState({\n        currentRoom,\n        rooms: currentUser.rooms,\n      });\n    })\n    .catch(console.error);\n}\n\nfunction sendMessage() {\n  const { newMessage, currentUser, currentRoom, pictures } = this.state;\n  const parts = [];\n\n  if (newMessage.trim() === \"\" && pictures.length === 0) return;\n\n  if (newMessage.trim() !== \"\") {\n    parts.push({\n      type: \"text/plain\",\n      content: newMessage\n    });\n  }\n\n  pictures.forEach(pic => {\n    parts.push({\n      file: pic\n    });\n  });\n\n  currentUser.sendMultipartMessage({\n    roomId: `${currentRoom.id}`,\n    parts\n  });\n\n  this.setState({\n    newMessage: \"\",\n    pictures: [],\n    showImagePicker: false\n  });\n}\n"]},"metadata":{},"sourceType":"module"}