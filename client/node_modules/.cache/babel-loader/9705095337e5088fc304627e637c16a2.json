{"ast":null,"code":"var _jsxFileName = \"/home/ayo/Dev/pusher/react-unread/src/App.js\";\nimport React, { Component } from \"react\";\nimport { handleInput, connectToChatkit, connectToRoom, sendDM, onDrop, sendMessage, sendFile } from \"./methods\";\nimport RoomUsers from \"./components/RoomUsers\";\nimport \"skeleton-css/css/normalize.css\";\nimport \"skeleton-css/css/skeleton.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userId: \"\",\n      showLogin: true,\n      isLoading: false,\n      currentUser: null,\n      currentRoom: null,\n      rooms: [],\n      roomUsers: [],\n      roomName: null,\n      messages: [],\n      pictures: [],\n      newMessage: \"\",\n      showImageUploadDialog: false,\n      fileUploadMessage: \"\"\n    };\n    this.handleInput = handleInput.bind(this);\n    this.connectToChatkit = connectToChatkit.bind(this);\n    this.connectToRoom = connectToRoom.bind(this);\n    this.sendMessage = sendMessage.bind(this);\n  }\n\n  render() {\n    const _this$state = this.state,\n          userId = _this$state.userId,\n          showLogin = _this$state.showLogin,\n          rooms = _this$state.rooms,\n          currentRoom = _this$state.currentRoom,\n          currentUser = _this$state.currentUser,\n          messages = _this$state.messages,\n          newMessage = _this$state.newMessage,\n          roomUsers = _this$state.roomUsers,\n          roomName = _this$state.roomName,\n          showImageUploadDialog = _this$state.showImageUploadDialog,\n          fileUploadMessage = _this$state.fileUploadMessage;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"aside\", {\n      className: \"sidebar left-sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, currentUser ? React.createElement(\"div\", {\n      className: \"user-profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, currentUser.name), React.createElement(\"span\", {\n      className: \"user-id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"@\".concat(currentUser.id))) : null, currentRoom ? React.createElement(RoomList, {\n      rooms: rooms,\n      currentRoom: currentRoom,\n      connectToRoom: this.connectToRoom,\n      currentUser: currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }) : null), React.createElement(\"section\", {\n      className: \"chat-screen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"chat-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, currentRoom ? React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, roomName) : null), React.createElement(\"ul\", {\n      className: \"chat-messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(ChatSession, {\n      messages: messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"footer\", {\n      className: \"chat-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.sendMessage,\n      className: \"message-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: newMessage,\n      name: \"newMessage\",\n      className: \"message-input\",\n      placeholder: \"Type your message and hit ENTER to send\",\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.openImageUploadDialog,\n      type: \"button\",\n      className: \"btn image-picker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Image, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))))), React.createElement(\"aside\", {\n      className: \"sidebar right-sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, currentRoom ? React.createElement(RoomUsers, {\n      currentUser: currentUser,\n      sendDM: this.sendDM,\n      roomUsers: roomUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }) : null), showLogin ? React.createElement(Dialog, {\n      userId: userId,\n      handleInput: this.handleInput,\n      connectToChatkit: this.connectToChatkit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }) : null, showImageUploadDialog ? React.createElement(ImageUploadDialog, {\n      handleInput: this.handleInput,\n      fileUploadMessage: fileUploadMessage,\n      onDrop: this.onDrop,\n      sendFile: this.sendFile,\n      closeImageUploadDialog: this.closeImageUploadDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ayo/Dev/pusher/react-unread/src/App.js"],"names":["React","Component","handleInput","connectToChatkit","connectToRoom","sendDM","onDrop","sendMessage","sendFile","RoomUsers","App","constructor","state","userId","showLogin","isLoading","currentUser","currentRoom","rooms","roomUsers","roomName","messages","pictures","newMessage","showImageUploadDialog","fileUploadMessage","bind","render","name","id","openImageUploadDialog","closeImageUploadDialog"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  handleInput,\n  connectToChatkit,\n  connectToRoom,\n  sendDM,\n  onDrop,\n  sendMessage,\n  sendFile\n} from \"./methods\";\nimport RoomUsers from \"./components/RoomUsers\";\n\nimport \"skeleton-css/css/normalize.css\";\nimport \"skeleton-css/css/skeleton.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userId: \"\",\n      showLogin: true,\n      isLoading: false,\n      currentUser: null,\n      currentRoom: null,\n      rooms: [],\n      roomUsers: [],\n      roomName: null,\n      messages: [],\n      pictures: [],\n      newMessage: \"\",\n      showImageUploadDialog: false,\n      fileUploadMessage: \"\"\n    };\n\n    this.handleInput = handleInput.bind(this);\n    this.connectToChatkit = connectToChatkit.bind(this);\n    this.connectToRoom = connectToRoom.bind(this);\n    this.sendMessage = sendMessage.bind(this);\n  }\n\n  render() {\n    const {\n      userId,\n      showLogin,\n      rooms,\n      currentRoom,\n      currentUser,\n      messages,\n      newMessage,\n      roomUsers,\n      roomName,\n      showImageUploadDialog,\n      fileUploadMessage\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <aside className=\"sidebar left-sidebar\">\n          {currentUser ? (\n            <div className=\"user-profile\">\n              <span className=\"username\">{currentUser.name}</span>\n              <span className=\"user-id\">{`@${currentUser.id}`}</span>\n            </div>\n          ) : null}\n          {currentRoom ? (\n            <RoomList\n              rooms={rooms}\n              currentRoom={currentRoom}\n              connectToRoom={this.connectToRoom}\n              currentUser={currentUser}\n            />\n          ) : null}\n        </aside>\n        <section className=\"chat-screen\">\n          <header className=\"chat-header\">\n            {currentRoom ? <h3>{roomName}</h3> : null}\n          </header>\n          <ul className=\"chat-messages\">\n            <ChatSession messages={messages} />\n          </ul>\n          <footer className=\"chat-footer\">\n            <form onSubmit={this.sendMessage} className=\"message-form\">\n              <input\n                type=\"text\"\n                value={newMessage}\n                name=\"newMessage\"\n                className=\"message-input\"\n                placeholder=\"Type your message and hit ENTER to send\"\n                onChange={this.handleInput}\n              />\n              <button\n                onClick={this.openImageUploadDialog}\n                type=\"button\"\n                className=\"btn image-picker\"\n              >\n                <Image />\n              </button>\n            </form>\n          </footer>\n        </section>\n        <aside className=\"sidebar right-sidebar\">\n          {currentRoom ? (\n            <RoomUsers\n              currentUser={currentUser}\n              sendDM={this.sendDM}\n              roomUsers={roomUsers}\n            />\n          ) : null}\n        </aside>\n        {showLogin ? (\n          <Dialog\n            userId={userId}\n            handleInput={this.handleInput}\n            connectToChatkit={this.connectToChatkit}\n          />\n        ) : null}\n\n        {showImageUploadDialog ? (\n          <ImageUploadDialog\n            handleInput={this.handleInput}\n            fileUploadMessage={fileUploadMessage}\n            onDrop={this.onDrop}\n            sendFile={this.sendFile}\n            closeImageUploadDialog={this.closeImageUploadDialog}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}